name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '8'

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests
      run: mvn clean test

    - name: Build application
      run: mvn package -DskipTests

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: java-file-generator-jar
        path: target/*.jar

  multi-platform-test:
    name: Multi-Platform Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java-version: [8, 11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'

    - name: Run tests
      run: mvn clean test

    - name: Build on ${{ matrix.os }}
      run: mvn package -DskipTests

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      if: matrix.java-version == 8
      with:
        name: jar-${{ matrix.os }}
        path: target/*.jar
